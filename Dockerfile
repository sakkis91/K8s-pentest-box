FROM kalilinux/kali-rolling

RUN groupadd -r redteam && useradd -m -r -g redteam redteam

RUN apt-get update \
	&& apt-get install -y --no-install-recommends \
		nmap \
		vim \
		ssh \
		procps \
		zip unzip \
		jq \
                dnsutils \
		tcpdump \
		netcat-traditional \
		python3-dev \
		build-essential \
		python3-pip \ 
		curl \
		net-tools \
		iputils-ping \
	&& rm -rf /var/lib/apt/lists/*

WORKDIR /home/redteam

RUN mkdir -p .local/bin && chown -R redteam .local

#SUID shell
RUN cp /bin/bash /bin/suidbash && chmod 4755 /bin/suidbash

USER redteam

ENV PATH="/home/redteam/.local/bin:${PATH}"

#kube-hunter
RUN pip install kube-hunter

#peirates
RUN curl -LO https://github.com/inguardians/peirates/releases/download/v1.1.8-beta/peirates-linux-amd64.tar.xz \
  && tar -xvf peirates-linux-amd64.tar.xz \
  && cp peirates-linux-amd64/peirates .local/bin \
  && rm -rf peirates-linux-amd64.tar.xz peirates-linux-amd64

#rbac-tool
RUN curl https://raw.githubusercontent.com/alcideio/rbac-tool/master/download.sh | bash \
  && cp bin/rbac-tool .local/bin \
  && rm -rf bin

#kubectl - TODO: Add hash verification check?
RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" \
  && chmod +x kubectl && mkdir -p .local/bin \
  && mv kubectl .local/bin 

#kubectl-who-can
RUN curl -LO https://github.com/aquasecurity/kubectl-who-can/releases/download/v0.4.0/kubectl-who-can_linux_x86_64.tar.gz \
  && tar xzf kubectl-who-can_linux_x86_64.tar.gz \
  && chmod +x kubectl-who-can \
  && rm kubectl-who-can_linux_x86_64.tar.gz LICENSE README.md \
  && mv kubectl-who-can .local/bin

#kubeletctl
RUN curl -LO https://github.com/cyberark/kubeletctl/releases/download/v1.7/kubeletctl_linux_amd64 \
  && mv kubeletctl_linux_amd64 .local/bin

#botb
RUN curl -LO https://github.com/brompwnie/botb/releases/download/1.8.0/botb-linux-amd64 \
  && mv botb-linux-amd64 .local/bin/botb

#rakkess
RUN curl -LO https://github.com/corneliusweig/rakkess/releases/download/v0.5.0/rakkess-amd64-linux.tar.gz \                                                                                                               
  && tar xf rakkess-amd64-linux.tar.gz rakkess-amd64-linux \
  && chmod +x rakkess-amd64-linux \
  && mv -i rakkess-amd64-linux .local/bin/rakkess \
  && rm -rf rakkess-amd64-linux.tar.gz 

#go-pillage-registries
RUN curl -LO https://github.com/nccgroup/go-pillage-registries/releases/download/v1.0/go-pillage-registries_1.0_Linux_x86_64.tar.gz \
  && tar xzf go-pillage-registries_1.0_Linux_x86_64.tar.gz \
  && mv go-pillage-registries .local/bin \
  && rm go-pillage-registries_1.0_Linux_x86_64.tar.gz LICENSE README.md

#kubeaudit
RUN curl -LO https://github.com/Shopify/kubeaudit/releases/download/0.16.0/kubeaudit_0.16.0_linux_amd64.tar.gz \
  && tar xzf kubeaudit_0.16.0_linux_amd64.tar.gz \
  && rm kubeaudit_0.16.0_linux_amd64.tar.gz README.md \ 
  && mv kubeaudit .local/bin

#etcdctl
RUN curl -LO https://github.com/etcd-io/etcd/releases/download/v3.5.4/etcd-v3.5.4-linux-amd64.tar.gz \
  && tar xzf etcd-v3.5.4-linux-amd64.tar.gz \
  && mv etcd-v3.5.4-linux-amd64/etcdctl .local/bin \
  && rm -rf etcd-v3.5.4-linux-amd64.tar.gz etcd-v3.5.4-linux-amd64


#oc
RUN curl -LO https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz \
  && tar xf openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz \
  && mv openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit/oc .local/bin \
  && rm -rf openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit 

RUN chmod +x ~/.local/bin/*

CMD ["tail", "-f" , "/dev/null"]
